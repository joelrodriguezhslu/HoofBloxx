import { useCallback, useState } from 'react';
import { useOnRepetition } from "./useOnRepetition";
/**
 * Get the current block number
 * @param provider
 * @param pollTime if greater than 0, update the blocknumber on an interval
 * @returns
 */
export const useBlockNumber = (provider, pollTime = 0) => {
    const [blockNumber, setBlockNumber] = useState(0);
    const getBlockNumber = useCallback(async () => {
        const nextBlockNumber = await provider.getBlockNumber();
        if (nextBlockNumber !== blockNumber) {
            setBlockNumber(nextBlockNumber);
        }
    }, [blockNumber, provider]);
    useOnRepetition(getBlockNumber, { provider, pollTime });
    return blockNumber;
};
