import { useCallback, useState } from 'react';
import { useOnRepetition } from "./useOnRepetition";
/**
 * Get the current nonce of the address provided
 * @param provider
 * @param address
 * @param pollTime
 * @returns
 */
export const useNonce = (provider, address, pollTime = 0) => {
    const [nonce, setNonce] = useState(0);
    const getTransactionCount = useCallback(async () => {
        const nextNonce = await (provider === null || provider === void 0 ? void 0 : provider.getTransactionCount(address));
        if (nextNonce !== nonce && nextNonce >= 0) {
            setNonce(nextNonce);
        }
    }, [nonce]);
    useOnRepetition(getTransactionCount, { pollTime, leadingTrigger: provider != null });
    return nonce;
};
